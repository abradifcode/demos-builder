/* Vars & Mixins
------------------------------ */

$svgW: 500px;
$svgH: 300px;

$controlH: 40px;

$space: 10px;

$colors: purple, crimson, orangered, yellowgreen, skyblue, steelblue, olive, teal, indigo;

@mixin outline( $counter: 1 ) {
  outline: 2px solid nth( $colors, $counter );
}

@mixin valnMid {
  &:before {
    content: ' ';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
  }
}

/* Base
------------------------------ */

HTML, BODY {
  height: 100%;
}

BODY {
  margin: 0;
  padding: 0;
  background:
    linear-gradient( #EEE 1px, transparent 2px),
    linear-gradient( to right, #EEE 1px, transparent 2px);
  background-size: 1em 1em;
  font-size: 16px;
}

/* Layout
------------------------------ */

.demo {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  white-space: nowrap;
  font: 16px/1.4 Arial, sans-serif;

  &--buttons-left {
    display: flex;
  }
}

.demo__content {
  position: relative;
  width: $svgW;
  height: $svgH;

  &--svg-only {
    /* default */
  }

  &--left-range {
    width: $svgW + $controlH + $space;
  }

  &--top-range {
    height: $svgH + $controlH + $space;
  }

  &--both-ranges {
    width: $svgW + $controlH + $space;
    height: $svgH + $controlH + $space;
  }

  &--square {
    width: $svgH;
    height: $svgH;
  }
}

/* SVG
------------------------------ */

.svg {
  position: absolute;
  right: 0;
  bottom: 0;
  width: $svgW;
  height: $svgH;
  box-sizing: border-box;
  border: 2px solid #333;

  &--nosizes {
    width: auto;
    height: auto;
    left: $controlH + $space;
    top: $controlH + $space;
  }
  .demo__content--svg-only & {
    left: 0;
    top: 0;
  }
  .demo__content--square & {
    left: 0;
    top: 0;
    width: $svgH;
    height: $svgH;
  }
}

/* Controls
------------------------------ */

.controls {

  &__title {
    display: inline-block;
    vertical-align: middle;
    margin-top: 0;
    margin-bottom: 0;
    font-weight: bold;
    font-size: 100%;
  }
}

  .controls--buttons {
    @include valnMid;
    height: $controlH;
    margin-bottom: $space;
    font-size: 1rem;
  }

  .controls--preserveAspectRatio {
    height: auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;

    .controls__title {
      flex-basis: 100%;
    }
  }

  .controls--viewBox {
    height: auto;
    display: flex;
    flex-direction: column;
    margin-right: 20px;

    &::before {
      content: none;
    }
  }

/* Buttons
------------------------------ */

.button {
  margin-left: .5rem;
  padding: .3rem .5rem;
  vertical-align: middle;
  border: 0;
  background: #BBB;
  cursor: pointer;
  font-size: 1rem;
  text-shadow: 0 0 1px rgba(0, 0, 0, .75);
  color: #FFF;

  &--current {
    background: crimson;
  }

  .controls--preserveAspectRatio &,
  .controls--viewBox & {
    margin-left: 0;
  }
  .controls--preserveAspectRatio & {
    flex-basis: 32%;
    margin-top: .5em;
  }
  .controls--viewBox & {
    margin-top: 1em;
  }
}

/* Ranges
------------------------------ */

.controls--ranges {
  position: absolute;
  width: 100%;
}
  .range {
    position: absolute;
    height: $controlH;
    text-align: center;

    &--hor {
      right: 0;
      width: $svgW;
    }

    &--vert {
      top: $controlH + $space;
      width: $svgH;
      transform-origin: 0 0;
      transform: rotate(-90deg) translateX(-100%);
    }

      &--vert .range__input {
        transform: rotate(180deg);
      }
  }

  .range__input {
    width: 100%;
    margin: auto;
    cursor: pointer;
  }

/* Resize Control
------------------------------ */
$control-size: 18px;

.resize-control {
  display: block;
  position: relative;
  width: $control-size;
  height: $control-size;
  border: 0;
  background: transparent;
  cursor: pointer;
  color: #000;
  transition: color, opacity .25s;

  &:focus,
  &:hover {
    color: #333;
  }

  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
    transition: inherit;
  }

  &::before {
    border: $control-size/2 solid transparent;
    border-color: transparent currentColor currentColor transparent;
  }

  &::after {
    width: 15px;
    height: 15px;
    opacity: .5;
    background: linear-gradient(to left top,
      transparent 1px,
      white 1px, white 2px,
      transparent 2px, transparent 4px,
      white 4px, white 5px,
      transparent 5px
    );
  }

  &:focus::after,
  &:hover::after {
    opacity: .75;
  }
}
